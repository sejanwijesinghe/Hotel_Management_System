<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBw8NDQ0NDQ0NDQ0NDQ0NDQ0NDQ8NDQ0NFREWFhURFRUY
        HSggGBolGxUVITEhJSkrLi4uFx8zODMtQygtLiv/2wBDAQoKCg0NDhUPDxUrHRUdKystKystNzctKy0r
        KystNy0tLS0tNy0rLSstLTcrLSstNy0tKystNy0rKzctLTcrKyv/wAARCACfAT4DASIAAhEBAxEB/8QA
        GgABAQEBAQEBAAAAAAAAAAAAAgEAAwQFB//EACcQAQEAAgEEAQQCAwEAAAAAAAABAhEDITFBUQQSImGx
        MuFSccGR/8QAGAEBAQEBAQAAAAAAAAAAAAAAAQACAwT/xAAeEQEBAQEBAAIDAQAAAAAAAAAAAQIRIRJB
        MVFxYf/aAAwDAQACEQMRAD8A/HWQo9jzLFRUGhRFjTKxWaEFFaKgysxSxY0VBVkZUGeL5PyPq+3Ht5vv
        +h+T8n6vtx/j5v8Al/TlhHPWu+R1xjntPjj0YRzwxd8YcwapYvH8r5O/sx7eb7/CfJ+Rv7ce3m+/x/px
        wxZ1rvkazjntbHF1xxXHF2wwWcnWmxxPSyLp0459HTaLTaIHSaLTJBYNjpYliIIWm0EFiWGlgLmy1lxo
        LEsOjoFiiQgmWIULNWLEIhlQoQ0KIsIqqyxCrGZUFeH5XyPq+3H+Pm/5f0vyef6vtx/j5vv+nHHFz1rv
        kdcZ57UxxdsMWwxdsMVnJ1pcY83yeff249vN9/0vPzb+3Ht5vtyxwGr9Q5zz2jhi74YLjg74YHORrQ4Y
        OsxWQtOkjlaOmLTaI6LFptLi6Ok0Wm0kFiaNLEXOxD0mgehYhIiFiU6NBETohpoqKymKIsaFKK0ZMtCi
        EUqxFIWEMJMs8nyOf6vtx/j5vv8Apefl+rpO3m+3OYsavfI6Zzz2jji6Y4ljg644qZN0mGDlzcm/tx7e
        b7Llz30nbzfYY4q/qKfuhjg644Fjg7Y4GZF0mGDpI0hyNyOdqaXSxdFno6bR6bRXQ0mj02knPTHpLEgs
        F00NgIaTR2CiFSw6NZIUTqVNBROjYGhVFjJVYhQirCGEQsVIUIrRWVCq8/Ny76Tt+25uXfSdv25M2tZz
        9rI6YwePG5XU7vbPjz6deff5WZ0avHHGBnlvpO3v2nJuX6b0bEpJg6Y4Li6QyC1JicQpGowshSNIUhFS
        QtNFkTKabR6bRQaTR6TSQWJo7E0CFg10oWIhRp2JYCA07BoIVKVGhqDRp0aGo5rEWMtLCgwoWVhDCKKK
        jbQVx5eTfSdv2mee+zmLWpGLjxuVkndMMbldTu+hw8UwmvPm+xmdWtcLh4phNTv5vt0TbO0cOhzcUznq
        +K8OUuN1e8fSc+bimc/M7VnWetZ1zyvJjk645PPZcbq9K6YZMyt2PRCjljXTGtyudjpCgwoWaUitFLLL
        pYuiAQtJURsSmNBCjTGohYDpQBEaQ0NQKNOjQ1Bo06FBjmUcuPPfS9/26RiN2cWFBhQsrCGLaQtrz8nN
        4nb9jy8u+k7fty2xdOmcu0y2uONyup3cuOXK6x7vpcPFMJ063zfazOrd+JcHFMJrze99uorK7R57ertd
        oyBMMq7KDm4pnPVnavHZcbq9494cvFMp+Z2rOs9azrnn08+OTrjk89lxur3PGsytWPVjXSPPhk7Y5Nyu
        djrFGUmmCi7Da7IUazJcYato1NINWjaCNGlRBQKQ0GDRq2oG4lClRBjwvRxcm+l7/t52cpXos69hRx4u
        TfS9/wBurcrjZxdvPy8u+k7ftObl30nb9uLGtOmcfdW1cMLldTramGNyupOr6fBxTCdO9732Mzp3r4z/
        AFfj8Mwmp1vm+3VGdp48tvfyTI2yC22x2pBbUFKJdjtpQk5eOZT8ztXk643V7vaHLxzKfnxRqd/DWdfT
        jjk7YZPL1l1e7thkzKbHqxpyvPjk6yukc7HTbbDbbI4e02O22ku02m02C1o2tRqLWjWtG1FqNVKCNGrU
        oaiUVohqPEzM4R6FLPltmv8A38glPVxCwwuV1O6YYXK6nevo8PFMJqd73vsTPyGtfH+rwcMwmp1t7326
        oztPHmt6W2RiOEw7ZAm2jFEotsjhLsWSKVdiyCcuEyn58V55uXVekc8Pq/34FjUqY5OuOTzzp0rpjkJV
        Y77bYbbbbJ7S0dttJdtsbU2kto1rU2DxqLWptFrRtbaUHiJVo2hpB2ogvIzM4u7VscbldTu2ONt1Ht4e
        OYz8+aZOjWuFw8UwnTv5roK7dI4X0mTbbIXbbRiiZGSJdi20uEw7UgmHbbS4TbTbbQLbbHbbKXKbGLtq
        KSlbYxkOHtNix6uFtLUTYXFSpsbUeFsbWtTaPGtStRtBa1LWtG0FrUYQ080XHHd1Exm7qPXx4fT/ANrn
        J101eLxYTGfnzXTYbV0cb6TDKu0lXY7UhV2LJFtR220iUdtsrhMjIFttiyRbbYskTC2yuEux2yHCTaNt
        JdttE2DwtptNptLi2ptLU2iu02iBKlrbG1FrUZB1pqm0qWgv/9k=
</value>
  </data>
</root>